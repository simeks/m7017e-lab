#ifndef __CHANNEL_H__
#define __CHANNEL_H__

class User;
class Server;
class ChannelPipeline;

class Channel
{
public:
	/// Constructor
	/// @param channel_id Unique id for this channel generated by Server.
	/// @param parent_id Id of the parent channel, -1 means no parent.
	/// @param channel_name Name of the channel.
	Channel(int channel_id, int parent_id, const std::string& channel_name, Server* server, int udp_port);
	~Channel();

	/// @brief Adds the specified user to this channel.
	void AddUser(User* user);

	/// @brief Removes the specified user from this channel.
	void RemoveUser(User* user);

	/// @brief Returns the name of the channel.
	const std::string& Name() const;

	/// @brief Returns the channels unique ID.
	int Id() const;
	
	/// Returns the unique ID of this channels parent. Returns -1 if there's no parent.
	int ParentId() const;

	/// Returns the UDP port that this channel is listening on.
	int UdpPort() const { return _udp_port; }

	void Tick();

private:
	Server* _server;
	ChannelPipeline* _pipeline;

	int _id;
	int _parent_id; // Id of the parent channel
	int _udp_port;

	std::string _name;

};


#endif // __CHANNEL_H__
